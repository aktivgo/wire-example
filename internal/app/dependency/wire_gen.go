// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package dependency

import (
	"wire/internal/domain/something/handler"
	"wire/internal/domain/something/repository"
	"wire/internal/domain/something/service"
	"wire/pkg/logging"
)

// Injectors from common.go:

func GetCommonDependency() CommonDependency {
	logger := ProvideLogger()
	commonDependency := CommonDependency{
		Logger: logger,
	}
	return commonDependency
}

// Injectors from handler.go:

func GetHandlerDependency() HandlerDependency {
	serviceDependency := GetServiceDepenedency()
	service := ProvideService(serviceDependency)
	handlerDependency := HandlerDependency{
		ServiceDependency: serviceDependency,
		Service:           service,
	}
	return handlerDependency
}

// Injectors from http_server.go:

func GetHttpServerDependency() HttpServerDependency {
	commonDependency := SingletonGetCommonDependency()
	handlerDependency := GetHandlerDependency()
	handler := ProvideHandler(handlerDependency)
	httpServerDependency := HttpServerDependency{
		CommonDependency:  commonDependency,
		HandlerDependency: handlerDependency,
		Handler:           handler,
	}
	return httpServerDependency
}

// Injectors from repository.go:

func GetRepositoryDependency() RepositoryDependency {
	string2 := ProvideMessage()
	repositoryDependency := RepositoryDependency{
		Message: string2,
	}
	return repositoryDependency
}

// Injectors from service.go:

func GetServiceDepenedency() ServiceDependency {
	repositoryDependency := GetRepositoryDependency()
	repository := ProvideRepository(repositoryDependency)
	serviceDependency := ServiceDependency{
		RepositoryDependency: repositoryDependency,
		Repository:           repository,
	}
	return serviceDependency
}

// common.go:

type CommonDependency struct {
	Logger logging.Logger
}

func SingletonGetCommonDependency() CommonDependency {
	return Singleton(
		"GetCommonDependency",
		GetCommonDependency,
	)
}

// handler.go:

type HandlerDependency struct {
	ServiceDependency ServiceDependency

	Service service.Service
}

// http_server.go:

type HttpServerDependency struct {
	CommonDependency CommonDependency

	HandlerDependency HandlerDependency

	Handler handler.Handler
}

// repository.go:

type RepositoryDependency struct {
	Message string
}

// service.go:

type ServiceDependency struct {
	RepositoryDependency RepositoryDependency

	Repository repository.Repository
}
